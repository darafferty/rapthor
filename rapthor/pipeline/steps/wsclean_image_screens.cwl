cwlVersion: v1.2
class: CommandLineTool
baseCommand: [wsclean]
label: Make an image
doc: |
  This tool makes an image using WSClean+IDG with a-term corrections generated by
  IDGCal.

requirements:
  - class: InitialWorkDirRequirement
    listing:
      - entryname: aterm_plus_beam.cfg
        # Note: WSClean requires that the h5parm filename be input as part of an aterm
        # config file (and not directly on the command line). Therefore, a config file is
        # made here that contains the filename defined in the h5parm input parameter.
        # Also, the required beam parameters are set here
        entry: |
          aterms = [idgcalsolutions, beam]
          idgcalsolutions.type = h5parm
          idgcalsolutions.files = [$(inputs.h5parm)]
          idgcalsolutions.update_interval = 8
          beam.differential = true
          beam.update_interval = 120
          beam.usechannelfreq = true
        writable: false
  - class: InlineJavascriptRequirement

arguments:
  - -no-update-model-required
  - -local-rms
  - -join-channels
  - -use-idg
  - -log-time
  - valueFrom: '$(runtime.tmpdir)'
    prefix: -temp-dir
  - valueFrom: '0.8'
    prefix: -multiscale-scale-bias
  - valueFrom: '2048'
    prefix: -parallel-deconvolution
  - valueFrom: '1.0'
    prefix: -auto-threshold
  - valueFrom: '50'
    prefix: -local-rms-window
  - valueFrom: 'rms-with-min'
    prefix: -local-rms-method
  - valueFrom: '32'
    prefix: -aterm-kernel-size
  - valueFrom: 'aterm_plus_beam.cfg'
    # Note: this file is generated on the fly in the requirements section above
    prefix: -aterm-config
  - valueFrom: 'briggs'
    # Note: we have to set part of the 'weight' argument here and part below, as it has
    # three parts (e.g., '-weight briggs -0.5'), and WSClean will not parse the value
    # correctly if it's given together with 'briggs'. We force the parts to be adjacent
    # using the position arg here and below
    prefix: -weight
    position: 1

inputs:
  - id: msin
    label: Filename of input MS
    doc: |
      The filename of input MS file for which imaging will be done.
    type: Directory
    inputBinding:
      position: 3
  - id: name
    label: Filename of output image
    doc: |
      The root filename of the output image.
    type: string
    inputBinding:
      prefix: -name
  - id: mask
    label: Filename of mask
    doc: |
      The filename of the clean mask.
    type: File
    inputBinding:
      prefix: -fits-mask
  - id: h5parm
    label: h5parm filename
    doc: |
      The filename of the h5parm containing the solutions to apply to correct for DDEs.
    type: File
    inputBinding:
      valueFrom: null
  - id: wsclean_imsize
    label: Image size
    doc: |
      The size of the image in pixels.
    type: int[]
    inputBinding:
      prefix: -size
  - id: wsclean_niter
    label: Number of iterations
    doc: |
      The maximum number of iterations.
    type: int
    inputBinding:
      prefix: -niter
  - id: wsclean_nmiter
    label: Number of major iterations
    doc: |
      The maximum number of major iterations.
    type: int
    inputBinding:
      prefix: -nmiter
  - id: robust
    label: Robust weighting
    doc: |
      The value of the robust weighting parameter.
    type: float
    inputBinding:
      position: 2
  - id: min_uv_lambda
    label: Minimum uv distance
    doc: |
      The minimum uv distance in lambda.
    type: float
    inputBinding:
      prefix: -minuv-l
  - id: max_uv_lambda
    label: Maximum uv distance
    doc: |
      The maximum uv distance in lambda.
    type: float
    inputBinding:
      prefix: -maxuv-l
  - id: mgain
    label: Cleaning gain
    doc: |
      The cleaning gain for major iterations.
    type: float
    inputBinding:
      prefix: -mgain
  - id: multiscale
    label: Activate multiscale
    doc: |
      Activates multiscale clean.
    type: boolean
    inputBinding:
      prefix: -multiscale
  - id: save_source_list
    label: Save source list
    doc: |
      Save clean-component source list to a file.
    type: boolean
    inputBinding:
      prefix: -save-source-list
  - id: pol
    label: Polarizations
    doc: |
      List of polarizations to image as single string (e.g., "IQUV").
    type: string
    inputBinding:
      prefix: -pol
  - id: link_polarizations
    label: Link polarizations
    doc: |
      Link polarizations when making Stokes IQUV images.
    type:
      - boolean?
      - string?
    inputBinding:
      prefix: -link-polarizations
  - id: join_polarizations
    label: Join polarizations
    doc: |
      Join polarizations when making Stokes IQUV images.
    type: boolean
    inputBinding:
      prefix: -join-polarizations
  - id: cellsize_deg
    label: Pixel size
    doc: |
      The size of one pixel of the image in deg.
    type: float
    inputBinding:
      prefix: -scale
  - id: channels_out
    label: Number of channels
    doc: |
      The number of output channels.
    type: int
    inputBinding:
      prefix: -channels-out
  - id: deconvolution_channels
    label: Number of deconvolution channels
    doc: |
      The number of deconvolution channels.
    type: int
    inputBinding:
      prefix: -deconvolution-channels
  - id: fit_spectral_pol
    type: int
    inputBinding:
      prefix: -fit-spectral-pol
  - id: taper_arcsec
    label: Taper value
    doc: |
      The taper value in arcsec.
    type: float
    inputBinding:
      prefix: -taper-gaussian
  - id: local_rms_strength
    label: Local RMS strength value
    doc: |
      The local RMS strength value.
    type: float
    inputBinding:
      prefix: -local-rms-strength
  - id: wsclean_mem
    label: Memory in GB
    doc: |
      The memory limit in GB.
    type: float
    inputBinding:
      prefix: -abs-mem
  - id: auto_mask
    label: Auto mask value
    doc: |
      The auto mask value.
  - id: auto_mask_nmiter
    label: Auto mask nmiter value
    doc: |
      The auto mask nmiter value.
    type: int
    inputBinding:
      prefix: -auto-mask-nmiter
    type: float
    inputBinding:
      prefix: -auto-mask
  - id: idg_mode
    label: IDG mode
    doc: |
      The IDG mode.
    type: string
    inputBinding:
      prefix: -idg-mode
  - id: num_threads
    type: int
    inputBinding:
      prefix: -j
  - id: num_deconvolution_threads
    label: Number of threads
    doc: |
      The number of threads to use.
    type: int
    inputBinding:
      prefix: -deconvolution-threads
  - id: dd_psf_grid
    label: Direction-dependent PSF grid
    doc: |
      The number of direction-dependent PSFs which should be fit horizontally and
      vertically in the image.
    type: int[]
    inputBinding:
      prefix: -dd-psf-grid

outputs:
  - id: image_I_nonpb_name
    label: Output non-PB-corrected image
    doc: |
      The filename of the output non-primary-beam-corrected image. The value is
      constructed from the input parameter "name". The glob should match to a
      single file, but because the filename differs depending on the mode used
      (full polarization vs. Stokes I only), we use two wildcard expressions.
    type: File
    outputBinding:
      glob: [$(inputs.name)-MFS-image.fits, $(inputs.name)-MFS-I-image.fits]
  - id: image_I_pb_name
    label: Output PB-corrected image
    doc: |
      The filename of the output primary-beam-corrected image. The value is
      constructed from the input parameter "name". The glob should match to a
      single file, but because the filename differs depending on the mode used
      (full-polarization vs. Stokes-I-only), we use two wildcard expressions.
    type: File
    outputBinding:
      glob: [$(inputs.name)-MFS-image-pb.fits, $(inputs.name)-MFS-I-image-pb.fits]
  - id: image_I_pb_channels
    label: Output PB-corrected channel images
    doc: |
      The filename of the output primary-beam-corrected channel images. The value is
      constructed from the input parameter "name". Because the filename differs
      depending on the mode used (full-polarization vs. Stokes-I-only), we use two
      wildcard expressions.
    type: File[]
    outputBinding:
      glob: [$(inputs.name)-0???-image-pb.fits, $(inputs.name)-0???-I-image-pb.fits]
  - id: images_extra
    label: Extra output images
    doc: |
      The filenames of extra output images that need to be saved. The values are
      constructed from the input parameter "name". These are the filenames of
      all potential images that should be saved (for both full-polarization and
      Stokes-I-only modes) but which are not needed by other steps in the
      workflow.
    type: File[]
    outputBinding:
      glob: ['$(inputs.name)-MFS-[QUV]-image.fits', '$(inputs.name)-MFS-[QUV]-image-pb.fits', '$(inputs.name)-MFS-*residual.fits', '$(inputs.name)-MFS-*model-pb.fits']
  - id: skymodel_nonpb
    label: Output non-PB-corrected sky model
    doc: |
      The filename of the output primary beam-corrected image. The value is
      constructed from the input parameter "name". It is not generated in the
      full-polarization mode.
    type: File?
    outputBinding:
      glob: $(inputs.name)-sources.txt
  - id: skymodel_pb
    label: Output PB-corrected image
    doc: |
      The filename of the output primary beam-corrected image. The value is
      constructed from the input parameter "name". It is not generated in the
      full-polarization mode.
    type: File?
    outputBinding:
      glob: $(inputs.name)-sources-pb.txt

hints:
  - class: DockerRequirement
    dockerPull: astronrd/rapthor
