cwlVersion: v1.2
class: Workflow
label: Rapthor DD calibration workflow
doc: |
  This workflow performs direction-dependent calibration. In general, calibration is done
  in two parts: (1) a fast phase-only calibration (with core stations constrianed to
  have the same solutions) to correct for ionospheric effects and (2) a further
  unconstrained slow gain calibration to correct for station-to-station differences. Part
  (2) is skipped if the calibration is phase-only. This calibration scheme currently works
  for HBA data only. The final products of this workflow are solution tables
  (h5parm files) and plots.

requirements:
  ScatterFeatureRequirement: {}
  StepInputExpressionRequirement: {}
  InlineJavascriptRequirement: {}

{% if max_cores is not none %}
hints:
  ResourceRequirement:
    coresMin: {{ max_cores }}
    coresMax: {{ max_cores }}
{% endif %}

inputs:
  - id: timechunk_filename
    label: Filename of input MS (time)
    doc: |
      The filenames of input MS files for which calibration will be done (length =
      n_obs * n_time_chunks).
    type: Directory[]
  
  - id: data_colname
    label: Input MS data column
    doc: |
      The data column to be read from the MS files (length = 1).
    type: string

  - id: starttime
    label: Start time of each chunk
    doc: |
      The start time (in casacore MVTime) for each time chunk used in the fast-phase
      calibration (length = n_obs * n_time_chunks).
    type: string[]

  - id: ntimes
    label: Number of times of each chunk
    doc: |
      The number of timeslots for each time chunk used in the fast-phase calibration
      (length = n_obs * n_time_chunks).
    type: int[]

{% if use_image_based_predict %}
  - id: num_spectral_terms
    label: Number of spectral terms
    doc: |
      The number of spectral terms to use in image-based prediction (length = 1).
    type: int

  - id: model_image_root
    label: Model image root
    doc: |
      The root name of the model image generated by image-based predict
      (length = 1).
    type: string

  - id: model_image_ra_dec
    label: RA and Dec of model center
    doc: |
      The RA and Dec in HHMMSS/DDMMSS of the center of the model image (length = 2).
    type: string[]

  - id: model_image_frequency_bandwidth
    label: Frequency and bandwidth of image
    doc: |
      The central frequency and bandwidth in Hz of the model image (length = 2).
    type: float[]

  - id: model_image_imsize
    label: Image size
    doc: |
      The size of the model image in pixels (length = 2).
    type: int[]

  - id: model_image_cellsize
    label: Pixel size
    doc: |
      The size of one pixel of the model image in deg (length = 1).
    type: float

  - id: ra_mid
    label: RA of the midpoint
    doc: |
        The RA in degrees of the middle of the region to be imaged (length = 1).
    type: float

  - id: dec_mid
    label: Dec of the midpoint
    doc: |
        The Dec in degrees of the middle of the region to be imaged (length = 1).
    type: float

  - id: facet_region_width_ra
    label: Width along RA
    doc: |
      The width along RA in degrees (corrected to Dec = 0) of the facet region (length = 1).
    type: float

  - id: facet_region_width_dec
    label:  Width along Dec
    doc: |
      The width along Dec in degrees of the facet region (length = 1).
    type: float

  - id: facet_region_file
    label: Filename of output region file
    doc: |
      The filename of the output ds9 facet region file (length = 1).
    type: string
{% endif %}

  - id: calibration_skymodel_file
    label: Filename of sky model
    doc: |
      The filename of the input sky model text file used for all processing except
      in DDECal solve steps (length = 1).
    type: File

  - id: calibrator_patch_names
    label: Names of calibrator patches
    doc: |
      The names of the patches used in calibration (length = n_calibrators).
    type: string[]

  - id: calibrator_fluxes
    label: Values of calibrator flux densities
    doc: |
      The total flux densities in Jy of the patches used in calibration (length =
      n_calibrators).
    type: float[]

  - id: solint_fast_timestep
    label: Fast solution interval in time
    doc: |
      The solution interval in number of timeslots for the fast phase solve (length =
      n_obs * n_time_chunks).
    type: int[]

  - id: solint_fast_freqstep
    label: Fast solution interval in frequency
    doc: |
      The solution interval in number of frequency channels for the fast phase solve
      (length = n_obs * n_time_chunks).
    type: int[]

  - id: fast_solutions_per_direction
    label: Fast number of solutions per direction
    doc: |
      The number of solutions per direction for the fast phase solve (length =
      n_obs * n_calibrators * n_time_chunks).
    type:
      type: array
      items:
        type: array
        items: int

  - id: output_fast_h5parm
    label: Fast output solution table
    doc: |
      The filename of the output h5parm solution table for the fast phase solve (length
      = n_obs * n_time_chunks).
    type: string[]

  - id: combined_fast_h5parm
    label: Combined fast output solution table
    doc: |
      The filename of the output combined h5parm solution table for the fast phase solve
      (length = 1).
    type: string

  - id: fast_smoothness_dd_factors
    label: Smoothness factors
    doc: |
      The factor by which to multiply the smoothnesscontraint for the fast phase
      solve, per direction (length = n_obs * n_calibrators * n_time_chunks).
    type:
      type: array
      items:
        type: array
        items: float

  - id: fast_smoothnessconstraint
    label: Fast smoothnessconstraint
    doc: |
      The smoothnessconstraint kernel size in Hz for the fast phase solve (length = 1).
    type: float

  - id: fast_smoothnessreffrequency
    label: Fast smoothnessreffrequency
    doc: |
      The smoothnessreffrequency Hz for the fast phase solve (length = n_obs *
      n_time_chunks).
    type: float[]

  - id: fast_smoothnessrefdistance
    label: Fast smoothnessrefdistance
    doc: |
      The smoothnessrefdistance in m for the fast phase solve (length = 1).
    type: float

  - id: fast_antennaconstraint
    label: Fast antenna constraint
    doc: |
      The antenna constraint for the fast phase solve (length = 1).
    type: string

  - id: solint_medium_timestep
    label: Medium solution interval in time
    doc: |
      The solution interval in number of timeslots for the medium phase solve (length =
      n_obs * n_time_chunks).
    type: int[]

  - id: solint_medium_freqstep
    label: Medium solution interval in frequency
    doc: |
      The solution interval in number of frequency channels for the medium phase solve
      (length = n_obs * n_time_chunks).
    type: int[]

  - id: medium_solutions_per_direction
    label: Medium number of solutions per direction
    doc: |
      The number of solutions per direction for the medium phase solve (length =
      n_obs * n_calibrators * n_time_chunks).
    type:
      type: array
      items:
        type: array
        items: int

  - id: output_medium1_h5parm
    label: Medium output solution table
    doc: |
      The filename of the output h5parm solution table for the medium1 phase solve (length
      = n_obs * n_time_chunks).
    type: string[]

  - id: combined_medium1_h5parm
    label: Combined medium output solution table
    doc: |
      The filename of the output combined h5parm solution table for the medium1 phase solve
      (length = 1).
    type: string

  - id: combined_fast_medium1_h5parm
    label: Combined fast and medium1 output solution table
    doc: |
      The filename of the output combined h5parm solution table for the fast phase solve
      and medium1 phase solve
      (length = 1).
    type: string

  - id: medium_smoothness_dd_factors
    label: Smoothness factors
    doc: |
      The factor by which to multiply the smoothnesscontraint for the medium phase
      solve, per direction (length = n_obs * n_calibrators * n_time_chunks).
    type:
      type: array
      items:
        type: array
        items: float

  - id: medium_smoothnessconstraint
    label: Fast smoothnessconstraint
    doc: |
      The smoothnessconstraint kernel size in Hz for the medium phase solve (length = 1).
    type: float

  - id: medium_smoothnessreffrequency
    label: Fast smoothnessreffrequency
    doc: |
      The smoothnessreffrequency Hz for the medium phase solve (length = n_obs *
      n_time_chunks).
    type: float[]

  - id: medium_smoothnessrefdistance
    label: Fast smoothnessrefdistance
    doc: |
      The smoothnessrefdistance in m for the medium phase solve (length = 1).
    type: float

  - id: medium_antennaconstraint
    label: Fast antenna constraint
    doc: |
      The antenna constraint for the medium phase solve (length = 1).
    type: string

  - id: dp3_steps
    label: Steps for DP3
    doc: |
      The list of DP3 steps to use in the calibration (length = 1).
    type: string

  - id: ddecal_applycal_steps
    label: DDECal applycal steps
    doc: |
      The list of DDECal applycal steps to use in the calibration (length = 1).
    type: string?

  - id: applycal_steps
    label: Applycal steps
    doc: |
      The list of stand-alone applycal steps to use in the calibration (length = 1).
    type: string?

  - id: normalize_h5parm
    label: The filename of normalization h5parm
    doc: |
      The filename of the input flux-scale normalization h5parm (length = 1).
    type: File?

  - id: bda_timebase
    label: BDA timebase
    doc: |
      The baseline length (in meters) below which BDA time averaging is done in the
      calibration (length = 1).
    type: float

  - id: bda_frequencybase
    label: BDA frequencybase
    doc: |
      The baseline length (in meters) below which BDA frequency averaging is done in the
      calibration (length = 1).
    type: float

  - id: bda_maxinterval
    label: BDA maxinterval
    doc: |
      The maximum interval duration (in sec) over which BDA time averaging is
      done in the calibration (length = n_obs * n_time_chunks).
    type: float[]

  - id: bda_minchannels
    label: BDA minchannels
    doc: |
      The minimum number of channles remaining after BDA frequency averaging is
      done in the calibration (length = n_obs * n_time_chunks).
    type: int[]

  - id: maxiter
    label: Maximum iterations
    doc: |
      The maximum number of iterations in the solves (length = 1).
    type: int

  - id: llssolver
    label: Linear least-squares solver
    doc: |
      The linear least-squares solver to use (length = 1).
    type: string

  - id: propagatesolutions
    label: Propagate solutions
    doc: |
      Flag that determines whether solutions are propagated as initial start values
      for the next solution interval (length = 1).
    type: boolean

  - id: fast_initialsolutions_h5parm
    label: Input solution table
    doc: |
      The filename of the input h5parm solution table to use for the fast-phase
      initial solutions (length = 1).
    type: File?

  - id: medium1_initialsolutions_h5parm
    label: Input solution table
    doc: |
      The filename of the input h5parm solution table to use for the medium1-phase
      initial solutions (length = 1).
    type: File?

  - id: solveralgorithm
    label: Solver algorithm
    doc: |
      The algorithm used for solving (length = 1).
    type: string

  - id: solverlbfgs_dof
    label: LBFGS degrees of freedom
    doc: |
      The degrees of freedom in LBFGS solver (length = 1).
    type: float

  - id: solverlbfgs_iter
    label: LBFGS iterations per minibatch
    doc: |
      The number of iterations per minibatch in LBFGS solver (length = 1).
    type: int

  - id: solverlbfgs_minibatches
    label: LBFGS minibatches
    doc: |
      The number of minibatches in LBFGS solver (length = 1).
    type: int

  - id: onebeamperpatch
    doc: |
      Flag that determines whether to apply the beam once per patch or per each
      source (length = 1).
    type: boolean

  - id: parallelbaselines
    doc: |
      Flag that enables parallelization of model computation over baselines.
    type: boolean

  - id: sagecalpredict
    doc: |
      Flag that enables model computation using SAGECal.
    type: boolean

  - id: fast_datause
    doc: |
      DDECal datause option for the fast-phase calibration (length = 1).
    type: string

  - id: stepsize
    label: Solver step size
    doc: |
      The solver step size used between iterations (length = 1).
    type: float

  - id: stepsigma
    label: Solver step size reduction factor
    doc: |
      If the solver step size mean is lower than its standard deviation by this
      factor, stop iterations (length = 1).
    type: float

  - id: tolerance
    label: Solver tolerance
    doc: |
      The solver tolerance used to define convergence (length = 1).
    type: float

  - id: uvlambdamin
    label: Minimum uv distance
    doc: |
      The minimum uv distance in lambda used during the solve (length = 1).
    type: float

  - id: sector_bounds_deg
    label: Sector boundary
    doc: |
      The boundary of all imaging sectors in degrees (length = 1).
    type: string

  - id: sector_bounds_mid_deg
    label: Sector boundary
    doc: |
      The mid point of the boundary of all imaging sectors in degrees (length = 1).
    type: string

  - id: max_threads
    label: Max number of threads
    doc: |
      The maximum number of threads to use for a job (length = 1).
    type: int

{% if do_slowgain_solve %}
# start do_slowgain_solve
  - id: slow_datause
    doc: |
      DDECal datause option for the slow-gain calibration (length = 1).
    type: string

  - id: solint_slow_timestep
    label: Slow solution interval in time
    doc: |
      The solution interval in number of timeslots for the slow-gain
      solve (length = n_obs * n_freq_chunks).
    type: int[]

  - id: solint_slow_freqstep
    label: Slow solution interval in frequency
    doc: |
      The solution interval in number of frequency channels for the
      slow-gain solve (length = n_obs * n_freq_chunks).
    type: int[]

  - id: slow_solutions_per_direction
    label: Slow number of solutions per direction
    doc: |
      The number of solutions per direction for the
      slow-gain solve (length = n_obs * n_directions * n_time_chunks).
    type:
      type: array
      items:
        type: array
        items: int

  - id: slow_smoothness_dd_factors
    label: Smoothness factors
    doc: |
      The factor by which to multiply the smoothnesscontraint for the
      slow-gain solve, per direction (length = n_obs * n_calibrators * n_time_chunks).
    type:
      type: array
      items:
        type: array
        items: float

  - id: slow_smoothnessconstraint
    label: Slow smoothnessconstraint
    doc: |
      The smoothnessconstraint kernel size in Hz for the slow-gain
      solve (length = 1).
    type: float

  - id: slow_antennaconstraint
    label: Slow antenna constraint
    doc: |
      The antenna constraint for the slow-gain solve (length = 1).
    type: string

  - id: slow_initialsolutions_h5parm
    label: Input solution table
    doc: |
      The filename of the input h5parm solution table to use for the
      slow-gain initial solutions (length = 1).
    type: File?

  - id: medium2_initialsolutions_h5parm
    label: Input solution table
    doc: |
      The filename of the input h5parm solution table to use for the medium2-phase
      initial solutions (length = 1).
    type: File?

  - id: combined_medium2_h5parm
    label: Combined medium output solution table
    doc: |
      The filename of the output combined h5parm solution table for the medium2 phase solve
      (length = 1).
    type: string

  - id: max_normalization_delta
    label: Maximum normalization delta
    doc: |
      The maximum allowed difference in the median of the amplitudes from unity, per
      station (length = 1).
    type: float

  - id: scale_normalization_delta
    label: Scale normalization delta flag
    doc: |
      Flag that enables scaling (with distance from the phase center) of the
      maximum allowed difference in the median of the amplitudes from unity, per
      station (length = 1).
    type: string

  - id: phase_center_ra
    label: Phase center RA
    doc: |
      The RA in degrees of the phase center (length = 1).
    type: float

  - id: phase_center_dec
    label: Phase center Dec
    doc: |
      The Dec in degrees of the phase center (length = 1).
    type: float

  - id: output_slow_h5parm
    label: Slow solve output solution table
    doc: |
      The filename of the output h5parm solution table for the slow-
      gain solve (length = n_obs * n_freq_chunks).
    type: string[]

  - id: combined_slow_h5parm
    label: Combined slow output solution table
    doc: |
      The filename of the output combined h5parm solution table for the
      slow-gain solve (length = 1).
    type: string

  - id: output_medium2_h5parm
    label: Medium output solution table
    doc: |
      The filename of the output h5parm solution table for the medium2 phase solve (length
      = n_obs * n_time_chunks).
    type: string[]

  - id: combined_fast_medium1_medium2_h5parm
    label: Combined fast, medium1, and medium2 output solution table
    doc: |
      The filename of the output combined h5parm solution table for the fast
      phase solve, medium1 phase solve and medium2 phase solve
      (length = 1).
    type: string

  - id: combined_h5parms
    label: Combined output solution table
    doc: |
      The filename of the output combined h5parm solution table for the full solve
      (length = 1).
    type: string

  - id: solution_combine_mode
    label: Mode for combining solutions
    doc: |
      The mode used for combining the fast-phase and slow-gain solutions
      (length = 1).
    type: string?

{% endif %}
# end do_slowgain_solve


outputs:
  - id: fast_phase_solutions
    outputSource:
      - combine_fast_phases/outh5parm
    type: File
  - id: medium1_phase_solutions
    outputSource:
      - combine_medium1_phases/outh5parm
    type: File
  - id: combined_solutions
    outputSource:
      - adjust_h5parm_sources/adjustedh5parm
    type: File
  - id: fast_phase_plots
    outputSource:
      - plot_fast_phase_solutions/plots
    type: File[]
  - id: medium1_phase_plots
    outputSource:
      - plot_medium1_phase_solutions/plots
    type: File[]
{% if do_slowgain_solve %}
  - id: slow_gain_solutions
    outputSource:
      - combine_slow_gains/outh5parm
    type: File
  - id: slow_phase_plots
    outputSource:
      - plot_slow_phase_solutions/plots
    type: File[]
  - id: slow_amp_plots
    outputSource:
      - plot_slow_amp_solutions/plots
    type: File[]
  - id: medium2_phase_solutions
    outputSource:
      - combine_medium2_phases/outh5parm
    type: File
  - id: medium2_phase_plots
    outputSource:
      - plot_medium2_phase_solutions/plots
    type: File[]
{% endif %}


steps:
{% if use_image_based_predict %}
  - id: draw_model
    doc: |
      This step uses WSClean to draw model images using image-based predict.
    run: {{ rapthor_pipeline_dir }}/steps/wsclean_draw_model.cwl
{% if max_cores is not none %}
    hints:
      ResourceRequirement:
        coresMin: {{ max_cores }}
        coresMax: {{ max_cores }}
{% endif %}
    in:
      - id: skymodel
        source: calibration_skymodel_file
      - id: numterms
        source: num_spectral_terms
      - id: name
        source: model_image_root
      - id: ra_dec
        source: model_image_ra_dec
      - id: frequency_bandwidth
        source: model_image_frequency_bandwidth
      - id: cellsize_deg
        source: model_image_cellsize
      - id: imsize
        source: model_image_imsize
      - id: numthreads
        source: max_threads
    out:
      - id: model_images

  - id: make_region_file
    label: Make a ds9 region file
    doc: |
      This step makes a ds9 region file for image-based predict.
    run: {{ rapthor_pipeline_dir }}/steps/make_region_file.cwl
    in:
      - id: skymodel
        source: calibration_skymodel_file
      - id: ra_mid
        source: ra_mid
      - id: dec_mid
        source: dec_mid
      - id: width_ra
        source: facet_region_width_ra
      - id: width_dec
        source: facet_region_width_dec
      - id: outfile
        source: facet_region_file
      - id: enclose_names
        valueFrom: 'False'
    out:
      - id: region_file

  - id: adjust_normalize_sources
    label: Adjust normalize h5parm sources
    doc: |
      This step adjusts the source coordinates of the normalization h5parm
      to match those in the sky model.
    run: {{ rapthor_pipeline_dir }}/steps/adjust_h5parm_sources.cwl
    when: $(inputs.h5parm !== null)
    in:
      - id: skymodel
        source: calibration_skymodel_file
      - id: h5parm
        source: normalize_h5parm
    out:
      - id: adjustedh5parm
{% endif %}
# end use_image_based_predict

  - id: solve
    label: Solve
    doc: |
      This step uses DDECal (in DP3) to solve for phase and/or gain corrections, using the
      input MS files and sourcedb
    run: {{ rapthor_pipeline_dir }}/steps/ddecal_solve.cwl
{% if max_cores is not none %}
    hints:
      ResourceRequirement:
        coresMin: {{ max_cores }}
        coresMax: {{ max_cores }}
{% endif %}
    in:
      - id: msin
        source: timechunk_filename
      - id: data_colname
        source: data_colname
      - id: starttime
        source: starttime
      - id: ntimes
        source: ntimes
      - id: steps
        source: dp3_steps
      - id: applycal_steps
        source: applycal_steps
      - id: ddecal_applycal_steps
        source: ddecal_applycal_steps
{% if use_image_based_predict %}
      - id: normalize_h5parm
        source: adjust_normalize_sources/adjustedh5parm
{% else %}
      - id: normalize_h5parm
        source: normalize_h5parm
{% endif %}
      - id: timebase
        source: bda_timebase
      - id: maxinterval
        source: bda_maxinterval
      - id: frequencybase
        source: bda_frequencybase
      - id: minchannels
        source: bda_minchannels
      - id: onebeamperpatch
        source: onebeamperpatch
      - id: parallelbaselines
        source: parallelbaselines
      - id: sagecalpredict
        source: sagecalpredict
{% if use_image_based_predict %}
      - id: predict_regions
        source: make_region_file/region_file
      - id: predict_images
        source: draw_model/model_images
      - id: solve1_reusemodel
        valueFrom: '[predict.*]'
{% else %}
      - id: sourcedb
        source: calibration_skymodel_file
      - id: directions
        source: calibrator_patch_names
{% endif %}
      - id: numthreads
        source: max_threads
      - id: solve1_normalize_h5parm
        source: normalize_h5parm
      - id: solve1_h5parm
        source: output_fast_h5parm
      - id: solve1_solint
        source: solint_fast_timestep
      - id: solve1_mode
        valueFrom: 'scalarphase'
      - id: solve1_nchan
        source: solint_fast_freqstep
      - id: solve1_solutions_per_direction
        source: fast_solutions_per_direction
      - id: solve1_llssolver
        source: llssolver
      - id: solve1_maxiter
        source: maxiter
      - id: solve1_propagatesolutions
        source: propagatesolutions
      - id: solve1_initialsolutions_h5parm
        source: fast_initialsolutions_h5parm
      - id: solve1_initialsolutions_soltab
        valueFrom: '[phase000]'
      - id: solve1_solveralgorithm
        source: solveralgorithm
      - id: solve1_solverlbfgs_dof
        source: solverlbfgs_dof
      - id: solve1_solverlbfgs_iter
        source: solverlbfgs_iter
      - id: solve1_solverlbfgs_minibatches
        source: solverlbfgs_minibatches
      - id: solve1_datause
        source: fast_datause
      - id: solve1_stepsize
        source: stepsize
      - id: solve1_stepsigma
        source: stepsigma
      - id: solve1_tolerance
        source: tolerance
      - id: solve1_uvlambdamin
        source: uvlambdamin
      - id: solve1_smoothness_dd_factors
        source: fast_smoothness_dd_factors
      - id: solve1_smoothnessconstraint
        source: fast_smoothnessconstraint
      - id: solve1_smoothnessreffrequency
        source: fast_smoothnessreffrequency
      - id: solve1_smoothnessrefdistance
        source: fast_smoothnessrefdistance
      - id: solve1_antennaconstraint
        source: fast_antennaconstraint
      - id: solve1_keepmodel
        valueFrom: 'True'
      - id: solve2_reusemodel
        valueFrom: '[solve1.*]'
      - id: solve2_normalize_h5parm
        source: normalize_h5parm
      - id: solve2_h5parm
        source: output_medium1_h5parm
      - id: solve2_solint
        source: solint_fast_timestep
      - id: solve2_mode
        valueFrom: 'scalarphase'
      - id: solve2_nchan
        source: solint_fast_freqstep
      - id: solve2_solutions_per_direction
        source: fast_solutions_per_direction
      - id: solve2_llssolver
        source: llssolver
      - id: solve2_maxiter
        source: maxiter
      - id: solve2_propagatesolutions
        source: propagatesolutions
      - id: solve2_initialsolutions_h5parm
        source: medium1_initialsolutions_h5parm
      - id: solve2_initialsolutions_soltab
        valueFrom: '[phase000]'
      - id: solve2_solveralgorithm
        source: solveralgorithm
      - id: solve2_solverlbfgs_dof
        source: solverlbfgs_dof
      - id: solve2_solverlbfgs_iter
        source: solverlbfgs_iter
      - id: solve2_solverlbfgs_minibatches
        source: solverlbfgs_minibatches
      - id: solve2_datause
        source: fast_datause
      - id: solve2_stepsize
        source: stepsize
      - id: solve2_stepsigma
        source: stepsigma
      - id: solve2_tolerance
        source: tolerance
      - id: solve2_uvlambdamin
        source: uvlambdamin
      - id: solve2_smoothness_dd_factors
        source: fast_smoothness_dd_factors
      - id: solve2_smoothnessconstraint
        source: fast_smoothnessconstraint
      - id: solve2_smoothnessreffrequency
        source: fast_smoothnessreffrequency
      - id: solve2_smoothnessrefdistance
        source: fast_smoothnessrefdistance
      - id: solve2_antennaconstraint
        valueFrom: '[]'
{% if do_slowgain_solve %}
      - id: solve2_keepmodel
        valueFrom: 'True'
      - id: solve3_reusemodel
        valueFrom: '[solve1.*]'
      - id: solve3_normalize_h5parm
        source: normalize_h5parm
      - id: solve3_h5parm
        source: output_slow_h5parm
      - id: solve3_solint
        source: solint_slow_timestep
      - id: solve3_mode
        valueFrom: 'diagonal'
      - id: solve3_nchan
        source: solint_slow_freqstep
      - id: solve3_solutions_per_direction
        source: slow_solutions_per_direction
      - id: solve3_llssolver
        source: llssolver
      - id: solve3_maxiter
        source: maxiter
      - id: solve3_propagatesolutions
        source: propagatesolutions
      - id: solve3_initialsolutions_h5parm
        source: slow_initialsolutions_h5parm
      - id: solve3_initialsolutions_soltab
        valueFrom: '[phase000,amplitude000]'
      - id: solve3_solveralgorithm
        source: solveralgorithm
      - id: solve3_solverlbfgs_dof
        source: solverlbfgs_dof
      - id: solve3_solverlbfgs_iter
        source: solverlbfgs_iter
      - id: solve3_solverlbfgs_minibatches
        source: solverlbfgs_minibatches
      - id: solve3_datause
        source: slow_datause
      - id: solve3_stepsize
        source: stepsize
      - id: solve3_stepsigma
        source: stepsigma
      - id: solve3_tolerance
        source: tolerance
      - id: solve3_uvlambdamin
        source: uvlambdamin
      - id: solve3_smoothness_dd_factors
        source: slow_smoothness_dd_factors
      - id: solve3_smoothnessconstraint
        source: slow_smoothnessconstraint
      - id: solve3_antennaconstraint
        source: slow_antennaconstraint
      - id: solve3_keepmodel
        valueFrom: 'True'
      - id: solve4_reusemodel
        valueFrom: '[solve1.*]'
      - id: solve4_normalize_h5parm
        source: normalize_h5parm
      - id: solve4_h5parm
        source: output_medium2_h5parm
      - id: solve4_solint
        source: solint_fast_timestep
      - id: solve4_mode
        valueFrom: 'scalarphase'
      - id: solve4_nchan
        source: solint_fast_freqstep
      - id: solve4_solutions_per_direction
        source: fast_solutions_per_direction
      - id: solve4_llssolver
        source: llssolver
      - id: solve4_maxiter
        source: maxiter
      - id: solve4_propagatesolutions
        source: propagatesolutions
      - id: solve4_initialsolutions_h5parm
        source: medium2_initialsolutions_h5parm
      - id: solve4_initialsolutions_soltab
        valueFrom: '[phase000]'
      - id: solve4_solveralgorithm
        source: solveralgorithm
      - id: solve4_solverlbfgs_dof
        source: solverlbfgs_dof
      - id: solve4_solverlbfgs_iter
        source: solverlbfgs_iter
      - id: solve4_solverlbfgs_minibatches
        source: solverlbfgs_minibatches
      - id: solve4_datause
        source: fast_datause
      - id: solve4_stepsize
        source: stepsize
      - id: solve4_stepsigma
        source: stepsigma
      - id: solve4_tolerance
        source: tolerance
      - id: solve4_uvlambdamin
        source: uvlambdamin
      - id: solve4_smoothness_dd_factors
        source: fast_smoothness_dd_factors
      - id: solve4_smoothnessconstraint
        source: fast_smoothnessconstraint
      - id: solve4_smoothnessreffrequency
        source: fast_smoothnessreffrequency
      - id: solve4_smoothnessrefdistance
        source: fast_smoothnessrefdistance
      - id: solve4_antennaconstraint
        source: fast_antennaconstraint
{% endif %}
    scatter: [msin, starttime, ntimes, maxinterval,
              solve1_h5parm, solve1_solint, solve1_nchan, solve1_smoothnessreffrequency, solve1_solutions_per_direction, solve1_smoothness_dd_factors,
              solve2_h5parm, solve2_solint, solve2_nchan, solve2_smoothnessreffrequency, solve2_solutions_per_direction, solve2_smoothness_dd_factors,
{% if do_slowgain_solve %}
              solve3_h5parm, solve3_solint, solve3_nchan, solve3_solutions_per_direction, solve3_smoothness_dd_factors,
              solve4_h5parm, solve4_solint, solve4_nchan, solve4_smoothnessreffrequency, solve4_solutions_per_direction, solve4_smoothness_dd_factors,
{% endif %}
              minchannels]
    scatterMethod: dotproduct
    out:
      - id: output_h5parm1
      - id: output_h5parm2
      - id: output_h5parm3
      - id: output_h5parm4

  - id: combine_fast_phases
    label: Combine fast-phase solutions
    doc: |
      This step combines all the fast phase solutions from the solve step
      into a single solution table (h5parm file).
    run: {{ rapthor_pipeline_dir }}/steps/collect_h5parms.cwl
    in:
      - id: inh5parms
        source: solve/output_h5parm1
      - id: outputh5parm
        source: combined_fast_h5parm
    out:
      - id: outh5parm

  - id: plot_fast_phase_solutions
    label: Plot fast phase solutions
    doc: |
      This step makes plots of the fast phase solutions.
    run: {{ rapthor_pipeline_dir }}/steps/plot_solutions.cwl
    in:
      - id: h5parm
        source: combine_fast_phases/outh5parm
      - id: soltype
        valueFrom: 'phase'
      - id: root
        valueFrom: 'fast_phase_'
    out:
      - id: plots

  - id: combine_medium1_phases
    label: Combine medium-phase solutions
    doc: |
      This step combines all the medium1 phase solutions from the solve step
      into a single solution table (h5parm file).
    run: {{ rapthor_pipeline_dir }}/steps/collect_h5parms.cwl
    in:
      - id: inh5parms
        source: solve/output_h5parm2
      - id: outputh5parm
        source: combined_medium1_h5parm
    out:
      - id: outh5parm

  - id: plot_medium1_phase_solutions
    label: Plot medium phase solutions
    doc: |
      This step makes plots of the medium1 phase solutions.
    run: {{ rapthor_pipeline_dir }}/steps/plot_solutions.cwl
    in:
      - id: h5parm
        source: combine_medium1_phases/outh5parm
      - id: soltype
        valueFrom: 'phase'
      - id: root
        valueFrom: 'medium1_phase_'
    out:
      - id: plots

  - id: combine_fast_medium1_h5parms
    label: Combine fast- and medium-phase solutions
    doc: |
      This step combines the fast solutions with the medium1 ones from the solve
      nto a single solution table (h5parm file).
    run: {{ rapthor_pipeline_dir }}/steps/combine_h5parms.cwl
    in:
      - id: inh5parm1
        source: combine_fast_phases/outh5parm
      - id: inh5parm2
        source: combine_medium1_phases/outh5parm
      - id: outh5parm
        source: combined_fast_medium1_h5parm
      - id: mode
        valueFrom: 'p1p2_scalar'
      - id: reweight
        valueFrom: 'False'
      - id: calibrator_names
        source: calibrator_patch_names
      - id: calibrator_fluxes
        source: calibrator_fluxes
    out:
      - id: combinedh5parm

{% if do_slowgain_solve %}
# start do_slowgain_solve

  - id: combine_slow_gains
    label: Combine slow-gain solutions
    doc: |
      This step combines all the gain solutions from the solve
      into a single solution table (h5parm file).
    run: {{ rapthor_pipeline_dir }}/steps/collect_h5parms.cwl
    in:
      - id: inh5parms
        source: solve/output_h5parm3
      - id: outputh5parm
        source: combined_slow_h5parm
    out:
      - id: outh5parm

  - id: process_slow_gains
    label: Process slow-gain solutions
    doc: |
      This step processes the gain solutions from the solve, flagging,
      smoothing and renormalizing them.
    run: {{ rapthor_pipeline_dir }}/steps/process_gains.cwl
    in:
      - id: h5parm
        source: combine_slow_gains/outh5parm
      - id: flag
        valueFrom: 'True'
      - id: smooth
        valueFrom: 'True'
      - id: max_station_delta
        source: max_normalization_delta
      - id: scale_station_delta
        source: scale_normalization_delta
      - id: phase_center_ra
        source: phase_center_ra
      - id: phase_center_dec
        source: phase_center_dec
    out:
      - id: outh5parm

  - id: plot_slow_phase_solutions
    label: Plot slow phase solutions
    doc: |
      This step makes plots of the slow phase solutions.
    run: {{ rapthor_pipeline_dir }}/steps/plot_solutions.cwl
    in:
      - id: h5parm
        source: process_slow_gains/outh5parm
      - id: soltype
        valueFrom: 'phase'
      - id: root
        valueFrom: 'slow_phase_'
    out:
      - id: plots

  - id: plot_slow_amp_solutions
    label: Plot slow amp solutions
    doc: |
      This step makes plots of the slow amplitude solutions.
    run: {{ rapthor_pipeline_dir }}/steps/plot_solutions.cwl
    in:
      - id: h5parm
        source: process_slow_gains/outh5parm
      - id: soltype
        valueFrom: 'amplitude'
      - id: root
        valueFrom: 'slow_amplitude_'
    out:
      - id: plots

  - id: combine_medium2_phases
    label: Combine medium-phase solutions
    doc: |
      This step combines all the medium2 phase solutions from the solve step
      into a single solution table (h5parm file).
    run: {{ rapthor_pipeline_dir }}/steps/collect_h5parms.cwl
    in:
      - id: inh5parms
        source: solve/output_h5parm4
      - id: outputh5parm
        source: combined_medium2_h5parm
    out:
      - id: outh5parm

  - id: plot_medium2_phase_solutions
    label: Plot medium phase solutions
    doc: |
      This step makes plots of the medium2 phase solutions.
    run: {{ rapthor_pipeline_dir }}/steps/plot_solutions.cwl
    in:
      - id: h5parm
        source: combine_medium2_phases/outh5parm
      - id: soltype
        valueFrom: 'phase'
      - id: root
        valueFrom: 'medium2_phase_'
    out:
      - id: plots

  - id: combine_fast_medium1_medium2_h5parms
    label: Combine fast- and (both) medium-phase solutions
    doc: |
      This step combines the fast solutions with the medium1 and medium2 ones from the solve
      into a single solution table (h5parm file).
    run: {{ rapthor_pipeline_dir }}/steps/combine_h5parms.cwl
    in:
      - id: inh5parm1
        source: combine_fast_medium1_h5parms/combinedh5parm
      - id: inh5parm2
        source: combine_medium2_phases/outh5parm
      - id: outh5parm
        source: combined_fast_medium1_medium2_h5parm
      - id: mode
        valueFrom: 'p1p2_scalar'
      - id: reweight
        valueFrom: 'False'
      - id: calibrator_names
        source: calibrator_patch_names
      - id: calibrator_fluxes
        source: calibrator_fluxes
    out:
      - id: combinedh5parm

  - id: combine_fast_and_full_slow_h5parms
    label: Combine fast-phase and slow-gain solutions
    doc: |
      This step combines the phase solutions from the solve and
      the combined (and renormalized) slow gains into a single solution table
      (h5parm file).
    run: {{ rapthor_pipeline_dir }}/steps/combine_h5parms.cwl
    in:
      - id: inh5parm1
        source: combine_fast_medium1_medium2_h5parms/combinedh5parm
      - id: inh5parm2
        source: process_slow_gains/outh5parm
      - id: outh5parm
        source: combined_h5parms
      - id: mode
        source: solution_combine_mode
      - id: reweight
        valueFrom: 'False'
      - id: calibrator_names
        source: calibrator_patch_names
      - id: calibrator_fluxes
        source: calibrator_fluxes
    out:
      - id: combinedh5parm

  - id: adjust_h5parm_sources
    label: Adjust h5parm sources
    doc: |
      This step adjusts the h5parm source coordinates to match those in the sky model.
    run: {{ rapthor_pipeline_dir }}/steps/adjust_h5parm_sources.cwl
    in:
      - id: skymodel
        source: calibration_skymodel_file
      - id: h5parm
        source: combine_fast_and_full_slow_h5parms/combinedh5parm
    out:
      - id: adjustedh5parm

{% else %}
# start not do_slowgain_solve

  - id: adjust_h5parm_sources
    label: Adjust h5parm sources
    doc: |
      This step adjusts the h5parm source coordinates to match those in the sky model.
    run: {{ rapthor_pipeline_dir }}/steps/adjust_h5parm_sources.cwl
    in:
      - id: skymodel
        source: calibration_skymodel_file
      - id: h5parm
        source: combine_fast_medium1_h5parms/combinedh5parm
    out:
      - id: adjustedh5parm

{% endif %}
# end do_slowgain_solve / not do_slowgain_solve
