FROM ubuntu:20.04

# Use specific versions of aoflagger and everybeam. When changing the version,
# this docker file changes and CI will update the docker image.
ENV AOFLAGGER_VERSION_TAG 71ab10cd15d04dd3997cd5d12bfe0655f013a907
ENV EVERYBEAM_VERSION_TAG v0.4.0

RUN export DEBIAN_FRONTEND=noninteractive && apt-get update && \
    apt-get install -y \
    g++ cmake libfftw3-dev liblapack-dev libblas-dev python3 python3-pip \
    libboost-python-dev libcfitsio-dev python3-numpy wget \
    build-essential libhdf5-dev libarmadillo-dev libgsl-dev \
    libboost-filesystem-dev libboost-system-dev libboost-date-time-dev \
    libboost-program-options-dev libboost-test-dev \
    libxml2-dev libpng-dev pkg-config \
    libgtkmm-3.0-dev git libfftw3-dev \
    gfortran flex bison wcslib-dev \
    libboost-numpy-dev liblua5.3-dev \
    casacore-dev casacore-tools pybind11-dev \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* \
# Build aoflagger3
    && mkdir /aoflagger && cd /aoflagger \
    && git clone https://gitlab.com/aroffringa/aoflagger.git src \
    && (cd src && git checkout $AOFLAGGER_VERSION_TAG) \
    && mkdir build && cd build \
    && cmake -DCMAKE_INSTALL_PREFIX=/usr ../src && make install -j4 \
    && cd / && rm -rf aoflagger \
# Build everybeam
    && mkdir /everybeam && cd /everybeam \
    && git clone https://git.astron.nl/RD/EveryBeam.git src \
    && (cd src && git checkout $EVERYBEAM_VERSION_TAG) \
    && mkdir build && cd build \
    && cmake -DCMAKE_INSTALL_PREFIX=/usr -DBUILD_WITH_PYTHON=ON ../src -DPYTHON_EXECUTABLE=/usr/bin/python3 \
    && make install -j4 \
    && cd / && rm -rf everybeam \
# Install WSRT Measures (extra casacore data, for integration tests)
# Note: The file on the ftp site is updated daily. When warnings regarding leap
# seconds appear, ignore them or regenerate the docker image.
    && wget -O /WSRT_Measures.ztar ftp://ftp.astron.nl/outgoing/Measures/WSRT_Measures.ztar \
    && cd /var/lib/casacore/data \
    && tar xfz /WSRT_Measures.ztar \
    && rm /WSRT_Measures.ztar \
    # Make sure h5py is build against the installed hdf5 library
    # This is important when h5py is imported in embedded python code
    # and the main executable is also linked against the hdf5 library.
    # This happens for example when DPPP is running a PythonDPStep that is
    # importing h5py
    && python3 -m pip install h5py --user --no-binary=h5py --force-reinstall --no-deps \
    && python3 -m pip install pytest pytest-lazy-fixture astropy scipy matplotlib
