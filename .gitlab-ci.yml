default:
  image: ubuntu:20.04
  before_script:
    - apt-get update && apt-get install -y g++ cmake libfftw3-dev liblapacke-dev python3 python3-pip

# Avoid getting stuck on requested user input, i.e. avoid 
# https://git.astron.nl/RD/idg/-/jobs/37678#L767
variables:
  DEBIAN_FRONTEND: "noninteractive"

clang-format:
  script: 
    - pip3 install clang-format==9.0.0
    - export PATH=/home/gitlab-runner/.local/bin:$PATH
    - ./scripts/run-clang-format.sh

idg-release:
  script:
    - mkdir build
    - cd build
    - cmake ..
    - make install -j4

idg-debug:
  script:
    - mkdir build
    - cd build
    - cmake .. -DCMAKE_BUILD_TYPE=Debug
    - make install -j4

idg-test:
  script:
    - export PATH="${PATH}:/home/gitlab-runner/.local/bin"
    - pip3 install gcovr
    - mkdir build
    - cd build
    - cmake .. -DCMAKE_CXX_FLAGS="-coverage" -DCMAKE_EXE_LINKER_FLAGS="-coverage" -DBUILD_WITH_TESTS=On
    - make install -j4
    - export LD_LIBRARY_PATH=$(pwd)/lib:$LD_LIBRARY_PATH
    - ctest -j8 --verbose
    # Capture coverage
    - gcovr -r .. -e '.*/tests/.*' -e '.*/CompilerIdCXX/.*' -e '.*/external/.*'
    - gcovr -r .. -e '.*/tests/.*' -e '.*/CompilerIdCXX/.*' -e '.*/external/.*' --xml > coverage.xml
  artifacts:
    reports:
      cobertura: build/coverage.xml
