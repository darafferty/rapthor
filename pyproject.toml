[build-system]
build-backend = "setuptools.build_meta"
requires = [
    "setuptools>=45",
    "setuptools_scm[toml]>=6.2",
    "wheel",
]

[project]
name = "rapthor"
authors = [
    {name = "David Rafferty", email = "drafferty@hs.uni-hamburg.de"},
    {name = "Marcel Loose", email = "loose@astron.nl"},
    {name = "Andre Offringa", email = "offringa@astron.nl"},
    {name = "Arend G. Dijkstra", email = "adijkstra@astron.nl"},
    {name = "Tammo Jan Dijkema", email = "dijkema@astron.nl"},
    {name = "Mark de Wever", email = "mark.dewever@stcorp.nl"},
    {name = "Frits Sweijen", email = "sweijen@astron.nl"},
    {name = "Sarod Yatawatta", email = "yatawatta@astron.nl"},
]
description = "Rapthor: LOFAR DDE Pipeline"
readme = "README.md"
requires-python = ">=3.9"
license = {file = "LICENSE"}
classifiers=[
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
    "Natural Language :: English",
    "Operating System :: POSIX :: Linux",
    "Programming Language :: Python :: 3",
    "Topic :: Scientific/Engineering :: Astronomy",
]
dependencies = [
    "astropy",
    "bdsf",
    "jinja2",
    "losoto>=2.4.3",
    "lsmtool @ git+https://git.astron.nl/RD/LSMTool.git@master",
    "matplotlib",
    "mocpy",
    "numpy",
    "python-casacore",
    "python-dateutil",
    "pyyaml",
    "reproject",
    "requests",
    "Rtree",
    "scipy",
    "shapely",
    "toil[cwl]>=9.0",
    "streamflow>=0.2.0.dev13"
]
dynamic = ["version"]

[project.optional-dependencies]
test = ["tox"]


[tool.pytest.ini_options]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
]


[tool.setuptools]
# package-data is specified below in section [tool.setuptools.package-data]
include-package-data = false
packages = [
    "rapthor",
    "rapthor.lib",
    "rapthor.operations",
]
script-files = [
    "bin/concat_linc_files",
    "bin/plotrapthor",
    "bin/rapthor",
    "rapthor/scripts/add_sector_models.py",
    "rapthor/scripts/adjust_h5parm_sources.py",
    "rapthor/scripts/blank_image.py",
    "rapthor/scripts/calculate_image_diagnostics.py",
    "rapthor/scripts/combine_h5parms.py",
    "rapthor/scripts/concat_ms.py",
    "rapthor/scripts/filter_skymodel.py",
    "rapthor/scripts/make_catalog_from_image_cube.py",
    "rapthor/scripts/make_image_cube.py",
    "rapthor/scripts/make_mosaic.py",
    "rapthor/scripts/make_mosaic_template.py",
    "rapthor/scripts/make_region_file.py",
    "rapthor/scripts/mpi_runner.sh",
    "rapthor/scripts/normalize_flux_scale.py",
    "rapthor/scripts/process_gains.py",
    "rapthor/scripts/regrid_image.py",
    "rapthor/scripts/subtract_sector_models.py",
]

[tool.setuptools.package-data]
rapthor = [
    "pipeline/**",
    "scripts/*",
    "settings/*",
    "skymodels/*"
]


[tool.setuptools_scm]
write_to = "rapthor/_version.py"


[tool.tox]
requires = ["tox>4"]
envlist = ["py3{9,10,11,12,13}"]

[tool.tox.env_run_base]
description = "Run all tests"
deps = [
    "mock",
    "pytest",
    "pytest-cov",
    "pytest-xdist",
]
commands = [
    # test_field.py does not support parallel runs, so run sequentially.
    [
        "python", "-m", "pytest",
        # "-m", "not slow",
        "-k", "test_field.py",
        "--cov=rapthor",
    ],
    # Run all other tests with 4 parallel processes.
    # Add to the existing coverage report from the run above.
    [
        "python", "-m", "pytest",
        # "-m", "not slow",
        "-n", "4",
        "-k", "not test_field.py",
        "--cov-report", "term-missing",
        "--cov-report", "xml",
        "--cov-report", "html",
        "--cov=rapthor",
        "--cov-append",
    ],
]
changedir = "{toxinidir}/tests"

[tool.tox.env.lint]
deps = ["ruff"]
commands = [
    ["python", "-m", "ruff", "check"]
]
