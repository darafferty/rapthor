#!/usr/bin/env python3


import os
from subprocess import check_call, call
import casacore.tables
import numpy as np
import sys


# Get stokes component from argument list
stokes = sys.argv[1]

# Get some environment variables
common_dir = os.environ["COMMON"]
datadir = os.environ["DATADIR"]
msname = os.environ["MSNAME"]

sourcedb = f"pointsource-{stokes}.sourcedb"

ms = os.path.join(datadir, msname)

T = casacore.tables.taql(
    "SELECT TIME, cdatetime(TIME-.1) AS TIMESTR FROM $ms GROUPBY TIME"
)

interval_start = 0
interval_end = 100

if interval_end >= len(T):
    print(
        f"Interval end set to {interval_end}, but test measurment set only contains {len(T)} timesteps"
    )
    exit(1)

starttime = T[interval_start]["TIME"] - 0.1
endtime = T[interval_end]["TIME"] - 0.1
starttimestr = T[interval_start]["TIMESTR"]
endtimestr = T[interval_end]["TIMESTR"]

check_call(
    [
        "DPPP",
        os.path.join(common_dir, "dppp-predict.parset"),
        "msin=" + ms,
        "msin.starttime=" + starttimestr,
        "msin.endtime=" + endtimestr,
        "predict.sourcedb=" + sourcedb,
    ]
)

check_call(
    [
        "wsclean",
        "-name",
        f"pointsource-{stokes}",
        "-predict",
        "-interval",
        "0",
        "100",
        "-pol",
        "IQUV",
        "-use-idg",
        "-idg-mode",
        "cpu",
        "-no-reorder",
        ms,
    ]
)

t = casacore.tables.taql("SELECT * FROM $ms WHERE TIME>$starttime AND TIME<$endtime")

data = t.getcol("DATA")  # generated by DPPP
model_data = t.getcol("MODEL_DATA")  # generated by wsclean

print(f"Norm of DATA column: {np.linalg.norm(data)}")
print(f"Norm of MODEL_DATA column: {np.linalg.norm(model_data)}")

err = np.amax(abs(model_data - data))
if err < 1e-4:
    exit(0)
else:
    print(f"max error {err} (inf norm) exceeds specified threshold of 1e-4")
    exit(1)
